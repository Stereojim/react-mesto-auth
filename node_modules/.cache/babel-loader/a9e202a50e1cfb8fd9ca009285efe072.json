{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editProfileImage(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  /* .then(res => res.ok ? res.json() : Promise.reject(res.status)) */\n  // другие методы работы с API\n\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-39\",\n  headers: {\n    authorization: \"f2ec7423-3d33-4d4c-8f08-a96b34cddef8\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n/* export const apiObject = new Api(apiSettings); */","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","getProfile","fetch","then","_checkResponse","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","id","addLike","deleteLike","editProfileImage","avatar","res","ok","json","Promise","reject","status","api","authorization"],"sources":["C:/Users/pc 2345/mesto-react/mesto/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._headers = headers;\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  getProfile() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  editProfile(name, about) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  addCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  addLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  editProfileImage(avatar) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  /* .then(res => res.ok ? res.json() : Promise.reject(res.status)) */\r\n  // другие методы работы с API\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-39\",\r\n  headers: {\r\n    authorization: \"f2ec7423-3d33-4d4c-8f08-a96b34cddef8\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n/* export const apiObject = new Api(apiSettings); */"],"mappings":"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"},"metadata":{},"sourceType":"module"}